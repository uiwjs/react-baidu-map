{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","formatters","require","_builder","_default","assign","bind","undefined","ast","beforeExpr","startsExpr","isLoop","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","type","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","keys","forEach","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","types","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","key","val","Array","isArray","slice","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","call","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","names","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","body","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","_excluded","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","_t","isCallExpression","isExpressionStatement","isFunction","isIdentifier","isJSXIdentifier","isNewExpression","isPlaceholder","isStringLiteral","PATTERN","ancestors","_state$placeholderWhi","parent","resolve","resolveAncestors","isDuplicate","metadata","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement","_helperPluginUtils","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","builtinClasses","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","isClassDeclaration","ClassDeclaration","ref","generateUidIdentifier","replaceWith","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","isArrowFunctionExpression","arrowFunctionToExpression","assertExpressionStatement","makeStatementFormatter","unwrap","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","constructor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"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","file":"static/js/vendors-runtime-template.36a4b0df.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(\"static\") && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      const leftIsHackPipeExpression = left.type === \"BinaryExpression\" && left.operator === \"|>\" && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(types$1.privateName) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= types$1._in.binop || !this.prodParam.hasIn || !this.match(types$1._in)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody(op, prec) {\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression = bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(types$1.bracketL);\n\n      if (computed || optional || this.eat(types$1.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, types$1.arrow.label);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}