{"version":3,"sources":["../node_modules/@babel/traverse/lib/index.js","../node_modules/@babel/traverse/lib/path/index.js","../node_modules/@babel/traverse/lib/cache.js","../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../node_modules/@babel/traverse/lib/scope/index.js","../node_modules/@babel/traverse/lib/scope/binding.js","../node_modules/@babel/traverse/lib/context.js","../node_modules/@babel/traverse/node_modules/debug/src/browser.js","../node_modules/@babel/traverse/node_modules/debug/src/common.js","../node_modules/@babel/traverse/node_modules/ms/index.js","../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../node_modules/@babel/traverse/lib/path/ancestry.js","../node_modules/@babel/traverse/lib/path/inference/index.js","../node_modules/@babel/traverse/lib/path/inference/inferers.js","../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../node_modules/@babel/traverse/lib/path/replacement.js","../node_modules/@babel/traverse/lib/path/evaluation.js","../node_modules/@babel/traverse/lib/path/conversion.js","../node_modules/@babel/traverse/lib/path/introspection.js","../node_modules/@babel/traverse/lib/path/context.js","../node_modules/@babel/traverse/lib/path/removal.js","../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../node_modules/@babel/traverse/lib/path/modification.js","../node_modules/@babel/traverse/lib/path/lib/hoister.js","../node_modules/@babel/traverse/lib/path/family.js","../node_modules/@babel/traverse/lib/path/comments.js","../node_modules/@babel/traverse/lib/visitors.js","../node_modules/@babel/traverse/lib/hub.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_path","default","_scope","_hub","visitors","_context","require","t","cache","traverse","parent","opts","scope","state","parentPath","noScope","type","Error","VISITOR_KEYS","explode","node","_default","hasDenylistedType","path","has","stop","verify","cheap","enter","traverseFast","skipKeys","keys","context","key","visit","clearNode","removeProperties","delete","tree","hasType","denylistTypes","includes","denylist","SHOULD_SKIP","SHOULD_STOP","REMOVED","virtualTypes","_debug","_index","_cache","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","debug","NodePath","hub","this","contexts","_traverseFlags","container","listKey","data","isScope","val","create","def","undefined","msg","SyntaxError","buildError","visitor","validate","parts","inList","unshift","join","message","enabled","getPathLocation","code","v","targetNode","paths","Map","set","setup","assign","prototype","TYPES","typeKey","fn","TypeError","indexOf","push","virtualType","checkPath","clear","clearPath","clearScope","WeakMap","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Scope","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","ReferencedIdentifier","types","isIdentifier","isJSXMemberExpression","isJSXIdentifier","react","isCompatTag","name","isReferenced","isMemberExpression","grandparent","isBinding","isStatement","isVariableDeclaration","isForXStatement","left","isForStatement","init","isReferencedIdentifier","isExpression","isBlockScoped","isVar","loc","isUser","isPure","isFlow","isImportDeclaration","importKind","isExportDeclaration","exportKind","isImportSpecifier","isObjectPattern","isObjectExpression","await","_renamer","_binding","_globals","gatherNodeParts","isModuleDeclaration","isExportAllDeclaration","isExportNamedDeclaration","source","specifiers","length","isExportDefaultDeclaration","declaration","isModuleSpecifier","local","isLiteral","object","property","callee","properties","argument","id","expression","meta","openingElement","openingFragment","namespace","collectorVisitor","For","FOR_INIT_KEYS","declar","getFunctionParent","getProgramParent","registerBinding","Declaration","registerDeclaration","ImportDeclaration","getBlockParent","references","ForXStatement","isPattern","constantViolations","ExportDeclaration","exit","isClassDeclaration","isFunctionDeclaration","binding","getBinding","reference","declarations","decl","getBindingIdentifiers","LabeledStatement","AssignmentExpression","assignments","UpdateExpression","UnaryExpression","operator","bindings","CatchClause","Function","isFunctionExpression","NOT_LOCAL_BINDING","params","param","ClassExpression","uid","block","labels","inited","globals","uids","crawling","cached","_parent","isKey","isMethod","generateUidIdentifier","cloneNode","identifier","generateUid","toIdentifier","replace","i","_generateUid","hasLabel","hasBinding","hasGlobal","hasReference","program","defaultName","slice","generateUidBasedOnNode","isThisExpression","isSuper","constant","dontPush","isStatic","generateUidIdentifierBasedOnNode","kind","oldName","newName","rename","map","sep","repeat","console","log","violations","arrayLikeIsIterable","isGenericType","isArrayExpression","callExpression","memberExpression","helperName","args","numericLiteral","addHelper","getLabel","label","isLabeledStatement","registerLabel","specifier","unaryExpression","ids","reassign","bindingPath","ReferenceError","declarators","getOuterBindingIdentifiers","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","isClass","superClass","body","isClassBody","method","isBinary","right","elements","elem","prop","computed","isProperty","isUnaryExpression","isTaggedTemplateExpression","matchesPattern","tag","quasi","isTemplateLiteral","expressions","isPureish","crawl","programParent","_exploded","typeVisitors","addGlobal","ref","isBlockStatement","isProgram","isSwitchStatement","isLoop","isCatchClause","isFunction","ensureBlock","unique","blockHoist","_blockHoist","dataKey","declarPath","getData","variableDeclaration","unshiftContainer","setData","declarator","variableDeclarator","pop","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","hasOwnBinding","parentHasBinding","hasUid","contextVariables","_this$parent","info","removeOwnBinding","_this$getBinding2","builtin","Binding","referencePaths","referenced","clearValue","hasDeoptedValue","hasValue","TraversalContext","queue","priorityQueue","obj","notPriority","shouldVisit","visitQueue","visited","WeakSet","resync","pushContext","add","popContext","nodes","Array","isArray","visitMultiple","visitSingle","formatArgs","useColors","module","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","formatters","j","JSON","stringify","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","self","curr","Number","Date","ms","prev","coerce","format","formatter","call","logFn","apply","selectColor","extend","configurable","delimiter","newDebug","toNamespace","regexp","toString","substring","stack","disable","names","skips","enable","split","len","substr","test","forEach","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_helperSplitExportDeclaration","renameVisitor","bindingIdentifierEquals","skip","skipKey","skipAllButComputedMethodKey","Renamer","parentDeclar","maybeExportDeclar","find","isDeclaration","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","p","getStatementParent","isFile","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","type2","baseTypeStrictlyMatches","rightArg","isFlowBaseAnnotation","genericName","isGenericTypeAnnotation","isStringTypeAnnotation","isNumberTypeAnnotation","isBooleanTypeAnnotation","isMixedTypeAnnotation","isEmptyTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","TemplateLiteral","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","ParenthesizedExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","concat","violation","getTypeAnnotationBindingConstantViolations","functions","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","BOOLEAN_NUMBER_BINARY_OPERATORS","typeValue","createTypeAnnotationBasedOnTypeof","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","err","_codeFrame","codeFrameColumns","start","line","column","replaceWith","removed","_index2","nodePath","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","generateDeclaredUidIdentifier","pushContainer","returnStatement","assignmentExpression","arrowFunctionToExpression","newCallee","needToAwaitFunction","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","evaluateTruthy","res","evaluate","confident","deoptPath","seen","evaluateCached","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","evaluateQuasis","quasis","testResult","isExpressionWrapper","end","NaN","prefix","arg","arr","elems","elemValue","props","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","pow","func","global","_evaluate","raw","cooked","expr","toComputedKey","stringLiteral","bodyNode","statements","stringPath","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","objectExpression","thisExpression","_helperFunctionName","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","superBinding","getSuperBinding","superCall","argumentsBinding","conditionalExpression","binaryExpression","buildUndefinedNode","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","jsxIdentifier","assignmentPath","op","tmp","isUpdateExpression","updateExpr","computedKey","sequenceExpression","isClassMethod","supers","argsBinding","restElement","super","spreadElement","propName","fnBody","argsList","valueIdent","cacheKey","ThisExpression","JSXIdentifier","isJSXOpeningElement","MemberExpression","MetaProperty","pattern","allowPartial","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDefaultSpecifier","isImportNamespaceSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","allStatus","executionOrderCheckedNodes","dangerous","_resolve","ret","isTypeCastExpression","targetKey","targetName","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","isExecutionUncertain","maxIndex","_call","fns","then","isBlacklisted","isDenylisted","_this$opts$denylist","blacklist","shouldSkip","shouldStop","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","updateSiblingKeys","isWhile","isSwitchCase","insertBefore","nodes_","isJSXElement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","assertExpression","temp","fromIndex","incrementBy","verifiedNodes","hoist","hoister","_hoister","run","referenceVisitor","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","getCompatibleScopes","attachTo","getAttachmentPath","attached","children","jsxExpressionContainer","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","_","part","duplicates","getBindingIdentifierPaths","outerOnly","search","shift","_ids","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","getStatementListCompletion","lastNormalCompletions","newContext","statementCompletions","some","pathCompletions","isDoExpression","isTryStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","next","hasPrev","Boolean","hasNext","addComments","addComment","content","comments","merge","states","wrapper","rootVisitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","FLIPPED_ALIAS_KEYS","deprecatedKey","DEPRECATED_KEYS","trace","alias","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","arguments","dest","src","Hub"],"mappings":"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","file":"static/js/vendors-runtime-traverse.1804cb9f.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!t.VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return t.traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = t.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  t.removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  t.traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    t.validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {\n      if (t.isJSXIdentifier(node, opts)) {\n        if (t.react.isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return t.isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return t.isMemberExpression(node) && t.isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (t.isStatement(node)) {\n      if (t.isVariableDeclaration(node)) {\n        if (t.isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (t.isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return t.isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return t.isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return t.isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return t.isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return t.isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (t.isFlow(node)) {\n      return true;\n    } else if (t.isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (t.isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (t.isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (t.isModuleDeclaration(node)) {\n        if ((t.isExportAllDeclaration(node) || t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((t.isExportDefaultDeclaration(node) || t.isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (t.isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (t.isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  For(path) {\n    for (const key of t.FOR_INIT_KEYS) {\n      const declar = path.get(key);\n\n      if (declar.isVar()) {\n        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();\n        parentScope.registerBinding(\"var\", declar);\n      }\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (t.isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        if (binding) binding.reference(path);\n      } else if (t.isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            if (binding) binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[t.NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return t.cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return t.identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = t.toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return t.identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (t.isThisExpression(node) || t.isSuper(node)) {\n      return true;\n    }\n\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return t.cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (t.isArrayExpression(node)) {\n      return node;\n    }\n\n    if (t.isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier(\"Array\"), t.identifier(\"prototype\")), t.identifier(\"slice\")), t.identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(t.numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return t.callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return t.unaryExpression(\"void\", t.numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (t.isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (t.isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (t.isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (t.isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (t.isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (t.isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (t.isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (t.isTaggedTemplateExpression(node)) {\n      return t.matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (t.isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return t.isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = t.variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = t.variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar t = require(\"@babel/types\");\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = t.VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar t = require(\"@babel/types\");\n\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = t.identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(t.variableDeclaration(\"let\", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = t.identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: t.identifier(this.newName)\n    });\n    path.replaceWith(t.assignmentExpression(\"=\", t.identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = t.VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = t.VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar t = require(\"@babel/types\");\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();\n  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return t.stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return t.anyTypeAnnotation();\n      }\n\n      return t.voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return t.isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return t.isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return t.isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return t.isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return t.isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return t.isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return t.isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (t.isAnyTypeAnnotation(type)) return true;\n\n  if (t.isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return t.genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return t.voidTypeAnnotation();\n  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.stringTypeAnnotation();\n  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.numberTypeAnnotation();\n  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return t.booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return t.numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return t.stringTypeAnnotation();\n    }\n\n    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(argumentTypes);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(argumentTypes);\n  }\n\n  return t.createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return t.numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return t.stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return t.numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return t.booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return t.nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return t.genericTypeAnnotation(t.identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return t.genericTypeAnnotation(t.identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return t.genericTypeAnnotation(t.identifier(\"Function\"));\n}\n\nconst isArrayFrom = t.buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = t.buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = t.buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = t.buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return t.arrayTypeAnnotation(t.stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return t.arrayTypeAnnotation(t.anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return t.genericTypeAnnotation(t.identifier(\"AsyncIterator\"));\n      } else {\n        return t.genericTypeAnnotation(t.identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar t = require(\"@babel/types\");\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return t.voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return t.numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations = constantViolations.concat(functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n    return t.createTSUnionType(types);\n  }\n\n  if (t.createFlowUnionType) {\n    return t.createFlowUnionType(types);\n  }\n\n  return t.createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return t.numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return t.createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {\n      return {\n        typeAnnotation: t.createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (t.createFlowUnionType) {\n      return {\n        typeAnnotation: t.createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: t.createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  t.inheritLeadingComments(nodes[0], this.node);\n  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !t.isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && t.isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = t.expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && t.isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    t.inheritsComments(replacement, oldNode);\n    t.removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    t.validate(this.parent, this.key, [node]);\n  } else {\n    t.validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);\n\n  if (toSequenceExpression) {\n    return this.replaceWith(toSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));\n  this.replaceWith(t.callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", t.returnStatement(t.cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = t.identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(t.assignmentExpression(\"=\", t.cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(t.returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", t.FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", t.FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(t.awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(t.yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => t.identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return t.conditionalExpression(t.binaryExpression(\"===\", t.unaryExpression(\"typeof\", args()), t.stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      let curr = child.scope;\n\n      do {\n        if (curr.hasOwnBinding(\"arguments\")) {\n          curr.rename(\"arguments\");\n          return;\n        }\n\n        if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (curr = curr.parent);\n\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction matchesPattern(pattern, allowPartial) {\n  return t.matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return t.isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return t.isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return t.isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? t.isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && t.isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = t.VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!t.isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return t.isExpression(node) ? t.expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        t.assertExpression(node);\n        this.replaceWith(t.callExpression(t.arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(t.expressionStatement(t.assignmentExpression(\"=\", t.cloneNode(temp), node)));\n      nodes.push(t.expressionStatement(t.cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar t = require(\"@babel/types\");\n\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = t.variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = t.jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(t.cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar t = require(\"@babel/types\");\n\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) return records.concat(_getCompletionRecords(path, context));\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records = records.concat(breakCompletions);\n  }\n\n  records = records.concat(lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(t.unaryExpression(\"void\", t.numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  let completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n          newContext.shouldPopulateBreak = true;\n        } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions = completions.concat(lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions = completions.concat(statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions = completions.concat(statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions = completions.concat(statementCompletions);\n      } else {\n        completions = completions.concat(statementCompletions.filter(c => c.type === BREAK_COMPLETION));\n        lastNormalCompletions = statementCompletions.filter(c => c.type === NORMAL_COMPLETION);\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions = completions.concat(pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    records = records.concat(getStatementListCompletion(path.get(\"body\"), context));\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    records = addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    records = completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    records = records.concat(getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    }));\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return t.getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return t.getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  let search = [].concat(path);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = t.getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (declaration.isDeclaration()) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child) || child.node) {\n          search = search.concat(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar t = require(\"@babel/types\");\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  t.addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  t.addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar t = require(\"@babel/types\");\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = t.DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (t.TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;"],"sourceRoot":""}